model: mishig/tiny-detr-mobilenetsv3	model: mishig/tiny-detr-mobilenetsv3	downloads: 1829	likes: 0	task: object-detection
model: mishig/tiny-detr-mobilenetsv3	labels: LABEL_0, LABEL_1
DetrForObjectDetection(
  (model): DetrModel(
    (backbone): DetrConvModel(
      (conv_encoder): DetrTimmConvEncoder(
        (model): MobileNetV3Features(
          (conv_stem): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): DetrFrozenBatchNorm2d()
          (act1): Hardswish()
          (blocks): Sequential(
            (0): Sequential(
              (0): DepthwiseSeparableConv(
                (conv_dw): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): ReLU(inplace=True)
                (se): Identity()
                (conv_pw): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Identity()
              )
            )
            (1): Sequential(
              (0): InvertedResidual(
                (conv_pw): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): ReLU(inplace=True)
                (conv_dw): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): ReLU(inplace=True)
                (se): Identity()
                (conv_pwl): Conv2d(64, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (1): InvertedResidual(
                (conv_pw): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): ReLU(inplace=True)
                (conv_dw): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): ReLU(inplace=True)
                (se): Identity()
                (conv_pwl): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
            )
            (2): Sequential(
              (0): InvertedResidual(
                (conv_pw): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): ReLU(inplace=True)
                (conv_dw): Conv2d(72, 72, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=72, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): ReLU(inplace=True)
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(72, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (1): InvertedResidual(
                (conv_pw): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): ReLU(inplace=True)
                (conv_dw): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): ReLU(inplace=True)
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(32, 120, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (2): InvertedResidual(
                (conv_pw): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): ReLU(inplace=True)
                (conv_dw): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): ReLU(inplace=True)
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(32, 120, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
            )
            (3): Sequential(
              (0): InvertedResidual(
                (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=240, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): Identity()
                (conv_pwl): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (1): InvertedResidual(
                (conv_pw): Conv2d(80, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(200, 200, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=200, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): Identity()
                (conv_pwl): Conv2d(200, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (2): InvertedResidual(
                (conv_pw): Conv2d(80, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): Identity()
                (conv_pwl): Conv2d(184, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (3): InvertedResidual(
                (conv_pw): Conv2d(80, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): Identity()
                (conv_pwl): Conv2d(184, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
            )
            (4): Sequential(
              (0): InvertedResidual(
                (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (1): InvertedResidual(
                (conv_pw): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(672, 168, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(168, 672, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
            )
            (5): Sequential(
              (0): InvertedResidual(
                (conv_pw): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(672, 672, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=672, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(672, 168, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(168, 672, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(672, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (1): InvertedResidual(
                (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(960, 960, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=960, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(960, 240, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(240, 960, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
              (2): InvertedResidual(
                (conv_pw): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
                (conv_dw): Conv2d(960, 960, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=960, bias=False)
                (bn2): DetrFrozenBatchNorm2d()
                (act2): Hardswish()
                (se): SqueezeExcite(
                  (conv_reduce): Conv2d(960, 240, kernel_size=(1, 1), stride=(1, 1))
                  (act1): ReLU(inplace=True)
                  (conv_expand): Conv2d(240, 960, kernel_size=(1, 1), stride=(1, 1))
                  (gate): Hardsigmoid()
                )
                (conv_pwl): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): DetrFrozenBatchNorm2d()
              )
            )
            (6): Sequential(
              (0): ConvBnAct(
                (conv): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): DetrFrozenBatchNorm2d()
                (act1): Hardswish()
              )
            )
          )
        )
      )
      (position_embedding): DetrSinePositionEmbedding()
    )
    (input_projection): Conv2d(960, 32, kernel_size=(1, 1), stride=(1, 1))
    (query_position_embeddings): Embedding(2, 32)
    (encoder): DetrEncoder(
      (layers): ModuleList(
        (0): DetrEncoderLayer(
          (self_attn): DetrAttention(
            (k_proj): Linear(in_features=32, out_features=32, bias=True)
            (v_proj): Linear(in_features=32, out_features=32, bias=True)
            (q_proj): Linear(in_features=32, out_features=32, bias=True)
            (out_proj): Linear(in_features=32, out_features=32, bias=True)
          )
          (self_attn_layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (fc1): Linear(in_features=32, out_features=256, bias=True)
          (fc2): Linear(in_features=256, out_features=32, bias=True)
          (final_layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (decoder): DetrDecoder(
      (layers): ModuleList(
        (0): DetrDecoderLayer(
          (self_attn): DetrAttention(
            (k_proj): Linear(in_features=32, out_features=32, bias=True)
            (v_proj): Linear(in_features=32, out_features=32, bias=True)
            (q_proj): Linear(in_features=32, out_features=32, bias=True)
            (out_proj): Linear(in_features=32, out_features=32, bias=True)
          )
          (self_attn_layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (encoder_attn): DetrAttention(
            (k_proj): Linear(in_features=32, out_features=32, bias=True)
            (v_proj): Linear(in_features=32, out_features=32, bias=True)
            (q_proj): Linear(in_features=32, out_features=32, bias=True)
            (out_proj): Linear(in_features=32, out_features=32, bias=True)
          )
          (encoder_attn_layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
          (fc1): Linear(in_features=32, out_features=256, bias=True)
          (fc2): Linear(in_features=256, out_features=32, bias=True)
          (final_layer_norm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
        )
      )
      (layernorm): LayerNorm((32,), eps=1e-05, elementwise_affine=True)
    )
  )
  (class_labels_classifier): Linear(in_features=32, out_features=3, bias=True)
  (bbox_predictor): DetrMLPPredictionHead(
    (layers): ModuleList(
      (0): Linear(in_features=32, out_features=32, bias=True)
      (1): Linear(in_features=32, out_features=32, bias=True)
      (2): Linear(in_features=32, out_features=4, bias=True)
    )
  )
)
