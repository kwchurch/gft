hostname = asimov-52.svail.baidu.com
136.59 seconds	textattack/bert-base-uncased-QQP	accuracy: 0.9090774177590898	f1: 0.8781813361611877
73.57 seconds	assemblyai/distilbert-base-uncased-qqp	accuracy: 0.8992579767499381	f1: 0.8653598228157748
136.29 seconds	yoshitomo-matsubara/bert-base-uncased-qqp	accuracy: 0.9094731634924561	f1: 0.8783244680851064
403.85 seconds	howey/roberta-large-qqp	accuracy: 0.9213702696017808	f1: 0.8958217270194986
138.90 seconds	gchhablani/bert-base-cased-finetuned-qqp	accuracy: 0.9083848627256987	f1: 0.8767633750332712
139.14 seconds	A-bhimany-u08/bert-base-cased-qqp	accuracy: 0.8907741775908978	f1: 0.8532987841339447
71.79 seconds	textattack/distilbert-base-cased-QQP	accuracy: 0.8974771209497897	f1: 0.8627437994635584
157.19 seconds	textattack/albert-base-v2-QQP	accuracy: 0.9073460301756122	f1: 0.8746402516565156
***ERROR***	model: H:brandontanzhirong/paraphrasing-tool_t5-finetuned-QQP	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'ValueError'>, ValueError('not enough values to unpack (expected 2, got 1)'), <traceback object at 0x7f5a816e5700>)
118.37 seconds	echarlaix/bert-base-uncased-qqp-f87.8-d36-hybrid	accuracy: 0.9097947069008162	f1: 0.8787364921030757
71.28 seconds	textattack/distilbert-base-uncased-QQP	accuracy: 0.5338609943111551	f1: 0.5966008818870672
175.11 seconds	textattack/xlnet-base-cased-QQP	accuracy: 0.9066287410338857	f1: 0.8742127886441637
136.71 seconds	howey/bert-base-uncased-qqp	accuracy: 0.9108830076675736	f1: 0.8800878623489866
512.43 seconds	textattack/xlnet-large-cased-QQP	accuracy: 0.6318327974276527	f1: 0.0
***ERROR***	model: H:yoshitomo-matsubara/bert-base-uncased-qqp_from_bert-large-uncased-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7fd812551580>)
***ERROR***	model: H:Maelstrom77/roberta-large-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f2fc5bd4680>)
***ERROR***	model: H:yoshitomo-matsubara/bert-large-uncased-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7ff3d49ce500>)
***ERROR***	model: H:Alireza1044/albert-base-v2-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f611086b4c0>)
***ERROR***	model: H:AnonARR/qqp-bert	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f38a0916540>)
***ERROR***	model: H:Maelstrom77/bert-base-uncased-QQP	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f831e37a4c0>)
***ERROR***	model: H:TehranNLP-org/roberta-base-qqp-2e-5-42	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f70b1629500>)
***ERROR***	model: H:persiannlp/mt5-base-parsinlu-qqp-query-paraphrasing	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f3451acd600>)
***ERROR***	model: H:M-FAC/bert-mini-finetuned-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f6a2a805580>)
***ERROR***	model: H:M-FAC/bert-tiny-finetuned-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f6637de64c0>)
***ERROR***	model: H:TehranNLP-org/bert-base-uncased-qqp-2e-5-42	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f8b8def97c0>)
***ERROR***	model: H:anirudh21/albert-large-v2-finetuned-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7fa662039800>)
***ERROR***	model: H:AdapterHub/bert-base-uncased-pf-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f9f662644c0>)
***ERROR***	model: H:zyl1024/bert-base-cased-finetuned-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7f8dc449e5c0>)
***ERROR***	model: H:persiannlp/mt5-small-parsinlu-qqp-query-paraphrasing	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7fcf03420780>)
***ERROR***	model: H:jkgrad/xlnet-base-cased-qqp	data: H:glue,qqp	eqn: classify: label ~ question1 + question2	splits: val	split: val	task: None	error: (<class 'TypeError'>, TypeError("argument of type 'NoneType' is not iterable"), <traceback object at 0x7fe08a45c500>)
